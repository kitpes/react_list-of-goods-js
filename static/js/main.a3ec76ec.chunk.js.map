{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","displayedGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SA4BnB,IAAMC,EAAM,WACjB,MAAkCC,mBA5BT,IA4BzB,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAQHM,CAAiBjB,EAAiB,CAAEK,YAAWE,eAmBnD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAcJ,IAE9BoB,QAjBW,WACjBf,EAAaL,IAUT,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAcH,IAE9BmB,QAxBa,WACnBf,EAAaJ,IAiBT,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAab,IAEjBc,QA3CQ,WACdb,GAAeD,IAoCX,sBAWEF,GAAaE,IACb,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAzDI,WACZf,EAAa,IACbE,GAAc,IAoDR,sBAUJ,6BACGC,EAAea,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3ec76ec.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\nconst SORT_FIELD_DEFAULT = '';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState(SORT_FIELD_DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const displayedGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortByName = () => {\n    setSortField(SORT_FIELD_NAME);\n  };\n\n  const sortByLength = () => {\n    setSortField(SORT_FIELD_LENGTH);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortField !== SORT_FIELD_NAME },\n          )}\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {displayedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}